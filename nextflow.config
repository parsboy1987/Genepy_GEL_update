//dag.enabled = true
//dag.overwrite = true
//docker.enabled =  true
//singularity.autoMounts =  true
trace.overwrite = true
//singularity.cacheDir = "${projectDir}/containers"
manifest {
    name        = 'genepy-pipeline'
    description = 'A Nextflow pipeline to calculate Genepy scores from aggregated GVCF files'
    author      = 'Iman nazari <nazariiman@gmail.com>'
    homepage    = 'https://github.com/UoS-HGIG/'
    mainScript  = 'main.nf'
    workflowType = 'data-processing'
}
includeConfig 'conf/customised_pipeline_resources.config'
//includeConfig 'conf/containers/quay.config'

params {
//basedir=""
wg = "/tools/aws-workspace-apps/CADD/1.6/CADD-scripts/data/GRCh38_v1.6/no_anno"
chromosomes = params.chr ?: '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y'
vcf = ""

annotations_cadd = "/tools/aws-workspace-apps/CADD/1.6/CADD-scripts/data/annotations/GRCh38_v1.6/"
homos_vep = "/nas/weka.gel.zone/pgen_public_data_resources/vep_resources/VEP111/"
bed_int = "${projectDir}/templates/CCDS_hg38_pad25_sorted.bed"
// containers
cadd_  = 'martinmspedersen/cadd:v16'
vep_  =  'parsboy66/vep:v1'
pyR = 'parsboy66/genpy:v1'
//tmp="/re_scratch/re_gecip/machine_learning/inazari/nextflow.G"
// vep plugins
plugin1 = "/tools/aws-workspace-apps/CADD/1.6/CADD-scripts/data/GRCh38_v1.6/no_anno/whole_genome_SNVs.tsv.gz"
plugin2 = "/tools/aws-workspace-apps/CADD/1.6/CADD-scripts/data/GRCh38_v1.6/no_anno/gnomad.genomes.r3.0.indel.tsv.gz"
vep_plugins= "${projectDir}/templates/Plugins"
cadd__= "/tools/aws-workspace-apps/CADD/1.6/CADD-scripts/data/"
//
header_meta = "${projectDir}/header.meta_org"
genepy_py = "${projectDir}/templates/genepy.py"
// gene chunks
chunk_size = 1000
gene_code_bed = "${projectDir}/templates/gencode.v45.annotation_2.bed"
templates="${projectDir}/templates"
ethnicity = "/mnt/session_data/mounted-data-readonly/Ethnicity/ethnicity.txt"
gene_code_bed = "${projectDir}/templates/gencode.v45.annotation_2.bed"
xgen_bed= "${projectDir}/templates/xgen_plus_spikein.GRCh38.bed"
IBD_gwas.bed= "${projectDir}/templates/IBD_gwas_locus_0927.bed"
Genecode_p50.bed= "${projectDir}/templates/gencode.v43.basic.p50.bed"
//vcf_path = ""

config = 'conf/executors/standard.config'
echo = false
executor = false

// google-lifesciences
    gls_bootDiskSize = '50.GB'
    gls_preemptible = true
    zone = 'us-east1-b'
    network = 'default'
    subnetwork = 'default'

    // AWS batch
    aws_region = 'eu-west-1'
    aws_batch_default_queue = "optimal-instance-1tb-ami-on-demand-queue"
    aws_batch_cli_path = '/home/ec2-user/miniconda/bin/aws'
    aws_batch_fetch_instance_type = true
    aws_batch_max_parallel_transfers = 2
    aws_batch_volumes = '/home/ec2-user/.aws:/root/.aws'
}

profiles {
    standard { includeConfig params.config }
    awsbatch { includeConfig 'conf/executors/awsbatch.config' }
    local { includeConfig 'conf/executors/local.config' }
    docker { docker.enabled = true }
    eu_west_1 { includeConfig 'conf/cloud-region/eu_west_1.config' }
    eu_west_2 { includeConfig 'conf/cloud-region/eu_west_2.config' }
    test_ci_input { includeConfig 'conf/tests/ci/test_ci_input.config' }
    test_full_input { includeConfig 'conf/tests/full/test_full_input.config' }
    singularity { includeConfig 'conf/executors/singularity.config' }
    dockerhub { includeConfig 'conf/containers/dockerhub.config' }
    quay { includeConfig 'conf/containers/quay.config' }
    ecr { includeConfig 'conf/containers/ecr.config' }

}

includeConfig 'conf/data/data.config' // Loads in data
includeConfig 'conf/resources.config' // Loads in resources

executor {
    name = params.executor
    queueSize = params.queueSize
}


 env {
     HOME="$PWD"
}

report {
    enabled = true
    file = "${projectDir}/${params.chr}/Report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${projectDir}/${params.chr}/Timeline.html"
    overwrite = true
}

process {
    queue = params.aws_batch_default_queue

    withLabel: CADD_score {
        container = params.cadd_
        containerOptions = '-v ${params.vcf_path} -v ${params.tmp} -v ${params.annotations_cadd}:/opt/CADD-scripts-CADD1.6/data/annotations/GRCh38_v1.6/ -v ${params.vcf}'
    }
    withLabel: Genepy_score {
        container = params.pyR
        containerOptions = '-v ${params.genepy_py} -v ${params.tmp}'
    }
    withLabel: VEP_score {
        container = params.vep_
        containerOptions = '-v ${params.wg} -v ${projectDir} -v ${params.homos_vep} -v ${params.vep_plugins} -v ${params.plugin1} -v ${params.plugin2} -v ${projectDir} -v ${params.cadd__}'
    }
    withLabel: Pre_processing_1 {
        container = params.cadd_
        containerOptions = '-v ${params.output} -v ,${params.vcf} -v ${params.templates}'
    }
    withLabel: Pre_processing_2 {
        container = params.cadd_
        containerOptions = '-v ${params.output} -v ,${params.vcf} -v ${params.templates}'
    }

}



